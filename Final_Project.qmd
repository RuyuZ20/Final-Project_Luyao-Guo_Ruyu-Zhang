title: "Dap2 Final project-Housing Burden Among Older Adults"
author: "Luyao Guo, Ruyu Zhang"
date: "2024-11-20"
format: 
  pdf:
    include-in-header: 
       text: |
         \usepackage{fvextra}
         \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
include-before-body:
  text: |
    \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
      showspaces = false,
      showtabs = false,
      breaksymbolleft={},
      breaklines
    }
output:
  echo: false
  eval: false
---

```{python}
import pandas as pd
import altair as alt
import numpy as np
import warnings
warnings.filterwarnings('ignore')
alt.renderers.enable("png")

```

```{python}
file_path = '/Users/apple/Desktop/class/Dap-2/problem_sets/usa_00003_1.csv'
df_raw_data = pd.read_csv(file_path)
```
```{python}
print(df_raw_data.head())

# Print the column names
print(df_raw_data.columns.tolist())
```


Extract columns as needed
```{python}
#1
columns_needed = ['YEAR', 'STATEFIP', 'AGE', 'RENTGRS', 'INCTOT', 'DIFFMOB', 'DIFFCARE']
data = pd.read_csv(file_path, usecols=columns_needed)
print(data.info())
```

```{python}
#2
# Replace NaN
placeholder_values = [9999999, 0]
data.replace(placeholder_values, np.nan, inplace=True)

# Check NaN
print(data.isnull().sum())

```


 Drop Columns with Excessive Missing Values

```{python}
#3
# drop missing values rentgers
data = data.dropna(subset=['RENTGRS'])
print(data.isnull().sum())

#4
# Fill in other missing values with default values
data['AGE'].fillna(data['AGE'].median(), inplace=True)
data['INCTOT'].fillna(0, inplace=True)
data['DIFFMOB'].fillna(0, inplace=True)
data['DIFFCARE'].fillna(0, inplace=True)

#5 Filter for individuals aged 65 and older
data = data[data['AGE'] >= 65]

#6 Create Housing Burden column *
data['Housing_Burden'] = (data['RENTGRS'] / data['INCTOT']) * 100
# Handle infinite values
data['Housing_Burden'].replace([np.inf, -np.inf], np.nan, inplace=True)  
 # Assume 0 burden for undefined cases
data['Housing_Burden'].fillna(0, inplace=True) 

# 7: Summary of missing values and cleaned variables
print("Summary of missing values after cleaning:")
print(data.isnull().sum())

print("\nData overview after cleaning:")
print(data.describe())

```

```{python}
output_path = '/Users/apple/Desktop/class/Dap-2/problem_sets/final_project/cleaned_data.csv'
print(f"DataFrame saved locally as {output_path}")
```
